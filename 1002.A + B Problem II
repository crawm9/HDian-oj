Problem Description
I have a very simple problem for you. Given two integers A and B, your job is to calculate the Sum of A + B.
 
Input
The first line of the input contains an integer T(1<=T<=20) which means the number of test cases. 
Then T lines follow, each line consists of two positive integers, A and B. Notice that the integers are very large,
that means you should not process them by using 32-bit integer. You may assume the length of each integer will not exceed 1000.
 
Output
For each test case, you should output two lines. The first line is "Case #:", # means the number of the test case. 
The second line is the an equation "A + B = Sum", Sum means the result of A + B. Note there are some spaces int the equation. 
Output a blank line between two test cases.

Sample Input
2
1 2
112233445566778899 998877665544332211

Sample Output
Case 1:
1 + 2 = 3

Case 2:
112233445566778899 + 998877665544332211 = 1111111111111111110
//注意空行的规律。两个数相加要考虑第一位进位的各种情况999+999，299+99等。由于
//code:
#include<stdio.h>
#include<string.h>
#define LEN 1001
char * Add(char *,char *,char *);
int main()
{
    int i, j, n;
    char num1[LEN],num2[LEN];
    char n1[21][LEN],n2[21][LEN];
    char sum[21][LEN + 1];
    scanf("%d",&n);
    for(i = 1; i <= n; i++)
    {
        scanf("%s%s",num1,num2);
        getchar();
        strcpy(n1[i],num1);
        strcpy(n2[i],num2);
        Add(num1,num2,sum[i]);
    }
    for(i = 1; i <= n; i++)
    {
    if(i > 1)
    printf("\n");
    printf("Case %d:\n",i);
    printf("%s + %s = ",n1[i],n2[i]);
    for(j = 0; sum[i][j] != '\0'; j++)
    {
        if(sum[i][0] == '0' && j == 0)
            continue;
        printf("%c",sum[i][j]);
    }
    printf("\n");
    }
    getchar();
    getchar();
    return 0;
}
char * Add(char *st1,char * st2,char * sum)
{
    int i, m, n, k;
    char temp[LEN];
    // char sum[LEN + 1] = {'0'};
    m = strlen(st1);
    n = strlen(st2);
    if(m < n)//排序，方便处理
    {
        strcpy(temp,st1);
        strcpy(st1,st2);
        strcpy(st2,temp);
        k = m;
        m = n;
        n = k;
    }
    for(i = 0; i < m + 1; i++)//初始化处理
        sum[i] = '0';
    for(i = 0; i < n; i++)
        st2[i] = st2[i] - '0';
    for(i = 0; i < m; i++)
        st1[i] = st1[i] - '0';
    for(i = 0; i <= m; i++)//以最长的字符串为模板进行处理，尤其注意首位。
    {
        if(i < n)
            sum[m - i] = sum[m - i] + st1[m - i - 1] + st2[n - i - 1];
        else if(i < m)
            sum[m - i] = sum[m - i] + st1[m - i - 1];
        if(sum[m - i] > '9')
        {
            sum[m - i] = sum[m - i] - 10;
            sum[m -i - 1] = '1';
        }
    }
    sum[m + 1] = '\0';
    return sum;
}
