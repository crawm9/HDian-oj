Problem Description
A number sequence is defined as follows:

f(1) = 1, f(2) = 1, f(n) = (A * f(n - 1) + B * f(n - 2)) mod 7.

Given A, B, and n, you are to calculate the value of f(n).
 

Input
The input consists of multiple test cases. Each test case contains 3 integers A, B and n on a single line (1 <= A, B <= 1000, 1 <= n <= 100,000,000). Three zeros signal the end of input and this test case is not to be processed.
 

Output
For each test case, print the value of f(n) on a single line.
 

Sample Input
1 1 3
1 2 10
0 0 0
 

Sample Output
2
5
//因为f函数的结果是对7求模求出来的，所以结果只可能有7种，而新的函数值只与前两个有关，所以最多有7*7种情况，一定有循环的部分
//code
#include<stdio.h>
#define SIZE 7
int main()
{
    int f1, f2, f3, i, k;
    int a, b, count = 0;
    int mem[SIZE * SIZE + 1];
    int num[10000];
    long int n;
    
    while(scanf("%d%d%ld",&a,&b,&n))
    {
        i = 3; f1 = 1; f2 = 1;
        mem[1] = f1;mem[2] = f2;
        if(a == 0 && b == 0 && n == 0)
            break;
        while(i <= SIZE * SIZE)
        {
            f3 = (a * f2 + b * f1) % SIZE;
            f1 = f2;
            f2 = f3;
            mem[i] = f3;
            i++;
        }
        mem[0] = mem[49];
        k = n % (SIZE * SIZE);
        num[count++] = mem[k];
    }
    for(i = 0; i < count; i++)
        printf("%d\n",num[i]);
    return 0;
}
